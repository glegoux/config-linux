# Bash extension for Windows Subsystem for Linux

if grep -q Microsoft /proc/version; then
  # Configure server X for Linux GUI launched from WSL
  export DISPLAY=:0

  # All Windows command with .exe can be executed directly,
  # just some aliases for common windows commands
  alias docker=docker.exe
  alias powershell=powershell.exe
  alias cmd=cmd.exe
  alias explorer=explorer.exe
  alias notepad=notepad.exe

  # Have nice colors for ls
  export LS_COLORS='ow=01;36;40'

  # Allow to browse the Windows folders more easily, C:\ is mounted at /mnt/c in Linux side,
  # and you can mount Linux file system in Windows side at W:\ also.
  ##
  # Description:
  #   Override builtin cd command to be compatible with Windows Path.
  #   It is executed each time that cd is used, you can bypass this override
  #   with 'builtin cd', and see this override implementaion with 'type cd'.
  #   For example 'cd 'C:\Users'' or 'cd C:\\Users' allows to go to '/mnt/c/Users'
  #   folder, it is important to espace Windows path with simple quote or to prepend
  #   each slash with another slash, because slash is a meta-character to escape the
  #   next character in Bash. Furthermore just note that Windows paths are not case
  #   sensitive.
  #   Usual cd commands continue working with:
  #   cd ~; cd -; cd ..; cd; cd [options] [path];
  #   cd [relative_linux_path]; cd [relative_linux_path];
  #   ...
  #   The autocompletion doesn't work on Windows path.
  #   This override is not exported, it is only available in the read-eval-print loop
  #   for the current interactive bash session.
  # Global:
  #  Same that builtin cd command
  # Parameter:
  #  Same that builtin cd command
  # Exit Status:
  #  Same that builtin cd command
  #
  cd () {
    local last_param="${@: -1}";
    local dir="";
    local options="$@";
    if [[ $# -gt 0 ]] && [[ ! "${last_param}" =~ ^(-@|-e|-L|-P)$ ]]; then
      dir=$(echo -n "${last_param}" | sed 's/\\/\//g' | sed 's/^C:/\/mnt\/c/');
      options="${@:1:$#-1}";
    fi
    if [[ -z "${dir}" ]]; then
      if [[ -z "${options}" ]]; then
        builtin cd;
      else
        builtin cd ${options};
      fi
    else
      if [[ -z "${options}" ]]; then
        builtin cd "${dir}";
      else
        builtin cd ${options} "${dir}";
      fi
    fi
    return $?;
  }
  # Prevent that this function to be overriden
  readonly -f cd;
fi
